class Point3DGeo
!!!136706.java!!!	Point3DGeo(inout pt : Point3DGeo)
        longitude = pt.getLongitude();
        latitude = pt.getLatitude();
        elevation = pt.getElevation();
!!!136834.java!!!	Point3DGeo(in lat : double, in lon : double)
        this.longitude = lon;
        this.latitude = lat;
!!!136962.java!!!	Point3DGeo(in lat : double, in lon : double, in elevation : double)
        this.longitude = lon;
        this.latitude = lat;
        this.elevation = elevation;
!!!137090.java!!!	Point3DGeo(in id : int, in lat : double, in lon : double)
        this.id = id;
        this.longitude = lon;
        this.latitude = lat;
!!!137218.java!!!	Point3DGeo(in id : int, in lat : double, in lon : double, in elevation : double)
        this.id = id;
        this.longitude = lon;
        this.latitude = lat;
        this.elevation = elevation;
!!!137346.java!!!	getId() : long
        return id;
!!!137474.java!!!	setId(in id : int) : void
        this.id = id;
!!!137602.java!!!	getLongitude() : double
        return longitude;
!!!137730.java!!!	setLongitude(in lon : double) : void
        this.longitude = lon;
!!!137858.java!!!	getLatitude() : double
        return latitude;
!!!137986.java!!!	setLatitude(in lat : double) : void
        this.latitude = lat;
!!!138114.java!!!	getElevation() : double
        return elevation;
!!!138242.java!!!	setElevation(in elevation : double) : void
        this.elevation = elevation;
!!!138370.java!!!	copy(inout tableau : Point3DGeo [[][]]) : Point3DGeo
        int nRows = tableau[0].length;
        int nColumns = tableau[0].length;
        Point3DGeo[][] newTab = new Point3DGeo[nRows][nColumns];
        for (int i = 0; i < nRows; i++) {
            for (int j = 0; j < nColumns; j++) {
                newTab[i][j] = new Point3DGeo(tableau[i][j].getLatitude(),
                        tableau[i][j].getLongitude(), tableau[i][j].getElevation());
            }
        }
        return newTab;
!!!138498.java!!!	toGrid(inout pts : List<Point3DGeo>, in rows : int, in cols : int) : Point3DGeo
        Point3DGeo[][] result = new Point3DGeo[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                result[i][j] = new Point3DGeo(pts.get(i + j).getLatitude(),
                        pts.get(i + j).getLongitude(), pts.get(i + j).getElevation());
            }
        }
        return result;
!!!138626.java!!!	swapXY(inout pt : Point3DGeo) : Point3DGeo
        return new Point3DGeo(pt.getLongitude(), pt.getLatitude(), pt.getElevation());
!!!138754.java!!!	suppress(inout tableau : Point3DGeo [[][]], in index : int) : Point3DGeo
        int nRows = tableau[0].length;
        int nColumns = tableau[1].length;

        if (index >= nRows || index >= nColumns) {
            // Return exception ?
            return new Point3DGeo[0][0];
        }

        Point3DGeo[][] newTab = new Point3DGeo[nRows - 1][nColumns - 1];
        int newTabRow = 0;
        int newTabCol = 0;

        for (int i = 0; i < nRows; ++i) {
            if (i != index) {
                for (int j = 0; j < nColumns; ++j) {
                    if (j != index) {
                        newTab[newTabRow][newTabCol] = new Point3DGeo(tableau[i][j].getLatitude(),
                                tableau[i][j].getLongitude(), tableau[i][j].getElevation());
                        ++newTabCol;
                    }
                }
                ++newTabRow;
                newTabCol = 0;
            }
        }
        return newTab;
!!!138882.java!!!	toString() : String
        // return "Point3D{" + "id=" + id + ", latitude=" + latitude + ", longitude=" + longitude + ", elevation=" + elevation + '}';
        return latitude + " " + longitude + " " + elevation;
!!!139010.java!!!	hashCode() : int
        int hash = 5;
        return hash;
!!!139138.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Point3DGeo other = (Point3DGeo) obj;
        if (Double.doubleToLongBits(this.longitude) != Double.doubleToLongBits(other.longitude)) {
            return false;
        }
        if (Double.doubleToLongBits(this.latitude) != Double.doubleToLongBits(other.latitude)) {
            return false;
        }
        return Double.doubleToLongBits(this.elevation) == Double.doubleToLongBits(other.elevation);
